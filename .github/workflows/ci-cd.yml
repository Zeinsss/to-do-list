name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # specify your Node.js version here

    # Install dependencies
    - name: Install dependencies
      run: |
        npm install

    # Run tests (if any)
    - name: Run tests
      run: |
        npm test  # Assuming you have test scripts defined in package.json

  # Docker Build and Push to ECR (Optional for Docker Deployment)
  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensures deployment happens after build is successful

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2  # Set your AWS region here

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t my-app-image .
        

    - name: Push Docker image to ECR
      run: |
        docker tag my-app-image:latest ${{ secrets.AWS_ECR_REPOSITORY_URI }}:latest
        docker push ${{ secrets.AWS_ECR_REPOSITORY_URI }}:latest

  # Deploy the application to an EC2 instance (SSH)
  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: deploy  # Ensures this happens after Docker push

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << EOF
          cd /path/to/app
          docker pull ${{ secrets.AWS_ECR_REPOSITORY_URI }}:latest
          docker-compose down
          docker-compose up -d
        EOF
